@model IEnumerable<NewsPortal.Logic.Models.Comment>

@{
}

<div class="container">
    @foreach (var comment in Model)
    {
        <div class="border">
            <b> @comment.Author.UserName</b>
            <p>@comment.Description</p>
        </div>
        <div>
            <div>
                <b style="margin-left: 20px">Replies:</b>

                @for (int i = 1; i <= comment.Replies.Count(); i++)
                {
                    <div style="margin-left: @(20 * i + "px")">
                        <div class="border">
                            <b> @comment.Replies.ElementAtOrDefault(i - 1).Author.UserName</b>
                            <p>@comment.Replies.ElementAtOrDefault(i - 1).Description</p>
                        </div>

                        @if (comment.Replies.Count() == i)
                        {
                            @await Component.InvokeAsync("CommentEditor", new
                            {
                                commentId = comment.Replies.ElementAtOrDefault(i - 1).ParentId,
                                postId = comment.Replies.ElementAtOrDefault(i - 1).PostId
                            })
                        }

                    </div>
                }

            </div>

            @if (!comment.Replies.Any())
            {
                @await Component.InvokeAsync("CommentEditor", new { commentId = comment.Id, postId = comment.PostId })
            }
        </div>
    }
</div> 